---
- name: Configure dsm.sys 
  template: src=dsm.sys.j2 dest={{ dsm_sys_path }}

- name: Configure dsm.opt 
  template: src=dsm.opt.j2 dest={{ dsm_opt_path }}

- name: Configure default playbook InclExcl 
  template: src=InclExcl.j2 dest={{ inclexcl_path }}
  when: overwrite_InclExcl is not defined

- name: Configure playbook InclExcl.local
  template: src=InclExcl.j2 dest={{ inclexcl_local_path }}

- name: Configure custom InclExcl
  template: src=InclExcl.custom.j2 dest={{ inclexcl_path }}
  when: overwrite_InclExcl is defined

- name: Check if Client is registered to TSM
  become: yes 
  command: dsmadmc -id={{ tsm_server_admin_username }} -password={{ tsm_server_password }} query node {{ ansible_fqdn }}
  register: registered_to_tsm
  delegate_to: "{{ tsm_server_address }}"
  ignore_errors: true
  #failed_when: false
  no_log: true
  changed_when: false

- name: Register TSM Client
  become: yes
  command: dsmadmc -id={{ tsm_server_admin_username }} -password={{ tsm_server_password }} register node {{ ansible_fqdn }} {{ tsm_server_password }} passexp=9999 userid=none contact=IT domain={{ tsm_policy_domain }} backdelete={{ backdelete }} archdelete={{ archdelete }} maxnummp={{ maxnummp }}
  register: managed_registering_to_tsm
  run_once: true
  delegate_to: "{{ tsm_server_address }}"
  when: registered_to_tsm|failed

- name: Associate policy with TSM Client
  become: yes
  command: dsmadmc -id={{ tsm_server_admin_username }} -password={{ tsm_server_password }} define association {{ tsm_policy_domain }} {{ tsm_policy_name }} {{ ansible_fqdn }}
  run_once: true
  delegate_to: "{{ tsm_server_address }}"
  when: (registered_to_tsm|failed) and (managed_registering_to_tsm|success)

- name: generate random password sting
  script: ./generate_password.py creates={{tsm_pwd_path}} 
  changed_when: False
  register: tsm_password

- name: Generate TSM.PWD
  command: dsmc set password admin -type=filer {{ tsm_server_password }} {{tsm_password.stdout}} creates={{tsm_pwd_path}}
  register: command_result
  failed_when: (command_result.rc != 0) and (command_result.rc != 8)
  when: not tsm_password.skipped is defined


